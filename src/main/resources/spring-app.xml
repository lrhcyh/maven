<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"

   
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task.xsd

		
		">

	<!-- 开启注解 -->
	<context:annotation-config />

	<!-- 默认扫描的包路径, 自动扫描（自动注入）-自动的把注解变成bean,去掉controller的注解 -->
	<context:component-scan base-package="com.abcft">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<task:annotation-driven />
	
	 <!-- 导入mongodb的配置文件 -->  
   <import resource="mongodb-context.xml"/> 
	
	
	
	<!-- 导入配置源 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:spring-jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- mysql -->
	<bean id="mysqlDataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="alias">
			<value>dataSource</value>
		</property>
		<property name="driver">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="driverUrl">
			<value>jdbc:mysql://10.11.255.110:31306/r_reportor</value>
		</property>
		<property name="user">
			<value>rreportor</value>
		</property>
		<property name="password">
			<value>saWQR432QR</value>
		</property>
	</bean>

    <bean id="pvDataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="alias">

			<value>dataSource1</value>

		</property>
		<property name="driver">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="driverUrl">
			<value>jdbc:mysql://120.26.41.22:3306/abc_pv</value>
		</property>
		<property name="user">
			<value>abc_pv</value>
		</property>
		<property name="password">
			<value>UrZV*HmB*Ij]U$sr</value>
		</property>
		
		 <!-- 指定连接池中保留的最大连接数. Default:15-->  <!--  
         <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>  
         指定连接池中保留的最小连接数  
         <property name="minPoolSize" value="${jdbc.minPoolSize}"/>  
         指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3  
         <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>  
         最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0  
         <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>  
         当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3  
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>  
         JDBC的标准,用以控制数据源内加载的PreparedStatements数量。  
         但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0  
         <property name="maxStatements" value="${jdbc.maxStatements}"/>  
         每60秒检查所有连接池中的空闲连接.Default:0  
         <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>   -->
	</bean>
	
	


	
	
	
	
	<!-- JdbcTemplate使用动态数据源的配置 -->
	<!-- sqlserver -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="mysqlDataSource" />
		</property>
	</bean>
	
	<bean id="pvjdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="pvDataSource" />
		</property>
	</bean>
	
	

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mysqlDataSource" />
	</bean>

	
	
	
	




	<tx:annotation-driven transaction-manager="transactionManager" />




</beans> 